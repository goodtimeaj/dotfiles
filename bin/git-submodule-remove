#!/usr/bin/env bash
# Usage: git-submodule-remove <submodule-path>
set -e

# Exits with the given error message
die() {
  [ $# -gt 0 ] && echo "fatal: $*" 1>&2
  exit 1
}

[ -z "$1" ] && exit 1

# Remove any ending slash from the submodule path
submodule_path=$(echo "$1" | sed 's/\/$//'); shift

if git submodule status "$submodule_path" >/dev/null 2>&1; then

  # Remove the submodule's directory contents and remove the submodule's
  # section from `.git/config`
  git submodule deinit -f "$submodule_path"

  # Remove the (now empty) submodule directory and remove the submodule's
  # section from `.gitmodules`
  git rm -f "$submodule_path"

  # If the above leaves `.gitmodules` empty then remove it
  if [ -z "$(cat .gitmodules)" ]; then
    git rm -f .gitmodules
  fi

  # Remove the submodule's directory from `.git/modules/`
  if [ -d ".git/modules/$submodule_path" ]; then
    rm -rf ".git/modules/$submodule_path"
  fi
else
  die "Submodule '$submodule_path' not found"
fi
